#!/usr/bin/env nextflow

nextflow.enable.dsl=2

//Read the file with the bed paths and organize in a Tuple object
data = channel
    .fromPath(params.homer_input_csv)
    .splitCsv(header: true)
    .map { sample -> [sample.id,sample.name,file(sample.path)] }


//                                                                    \\
//** 1. Calculate Motif Enrichment in a single BED file of interest **\\
//                                                                    \\

process HOMER_ENRICHMENT {

    label 'process_high'
    publishDir "${params.outdir}/${name}", mode: 'copy'
    container '/storage/data/MAP/hpcapps/opt/core/pipelines/ingm-base.0.5.2.simg'
    
    when:
    !params.skip_enrichment

    input:
    tuple val(id), val(name), path(regions)

    output:
    tuple val(id), val(name), file("*.html"), file("*Results.txt"), emit: html
    path "homerResults/*", emit: denovo 
    path "knownResults/*", emit: knownmotifs

    script:
    """    
    set +eu
    source activate ${HOME}/singularity/envs/motifanalysis/   
    
    ${HOME}/singularity/envs/motifanalysis/bin/findMotifsGenome.pl ${regions} hg38 ./ -size given -p ${task.cpus} -cpg
    mv *Results.txt ${name}_knownResults.txt
    """
}

process PLOT_ENRICHMENT {

     label 'process_medium'
     publishDir "${params.outdir}/plots", mode: 'copy'
     container '/storage/data/MAP/hpcapps/opt/core/pipelines/ingm-base.0.5.2.simg'	

     when:
     !params.skip_enrichment

     input:
     tuple val(id), val(name), path(html_file), path(results_file)

     output:
     file "*.pdf"
     file "*.tsv"
     
     script:
     """
      set +eu
    source activate ${HOME}/singularity/envs/motifanalysis/
    
    Rscript ${HOME}/map/til-epigenetics/atac-seq/analysis/motif_analysis/homer/plot_motifs.R ${results_file}

    mv enrichment_volcano_vs_background.pdf enrichment_volcano_${name}_vs_background.pdf
    mv enrichment_table_vs_background.tsv enrichment_table_${name}_vs_background.tsv
     """
}

//                                                             \\
//** 2. Find specific motifs within the BED file of interest **\\
//                                                             \\

process HOMER_FIND_INSTANCE {

    label 'process_medium'
    publishDir "${params.outdir}/${name.join('_')}", mode: 'copy'
    container '/storage/data/MAP/hpcapps/opt/core/pipelines/ingm-base.0.5.2.simg'

    when:
    !params.skip_find_motif

    input:
    tuple val(id), val(name), path(regions)

    output:
    tuple val(id), val(name), file("*.bed"), emit: istances

    script:
    """
    source activate ${HOME}/singularity/envs/motifanalysis/
    ${HOME}/singularity/envs/motifanalysis/bin/annotatePeaks.pl ${regions} hg38 -m ${params.motif} > output.txt
    awk -v FS='\t' -v OFS='\t' '{if (\$22) print \$2, \$3, \$4, \$1, \$5;}' output.txt | tail -n +2 > ${params.tf_name}_motif_regions_diff_peaks.bed
    """
}

//										   \\
//** 3. Calculate Differential Motif Enrichment by providing a custom background **\\
//                                                                                 \\

// Calculate the enriched motifs in one set of regions (first file in the tuple) using the other as a background (second file in tuple)

process HOMER_DIFF_ONE_WAY {

    label 'process_high'
    publishDir "${params.outdir}/diff_comparison_${name[0]}_and_${name[1]}", mode: 'copy'
    container '/storage/data/MAP/hpcapps/opt/core/pipelines/ingm-base.0.5.2.simg'

    when:
    !params.skip_homer_diff
   
    input:
    tuple val(id), val(name), path(regions)

    output:
    tuple val(name), path("*.html")
    tuple val(name), path("*Results.txt"), emit: diff_results_one 
    path "homerResults/*"
    path "knownResults/*"

    script:
    """ 
    set +eu   
    source activate ${HOME}/singularity/envs/motifanalysis/

    # The [0] region is the first region of the .csv file used as input, while the [1] is the second one.
  
    ${HOME}/singularity/envs/motifanalysis/bin/findMotifsGenome.pl ${regions[0]} hg38 ./ -size given -bg ${regions[1]} -p ${task.cpus} -cpg -h 
    mv *Results.txt ${name[0]}_and_${name[1]}_knownResults.txt

    """
}

// Calculate the enriched motifs in one set of regions (second file in the tuple) using the other as a background (first file in tuple

process HOMER_DIFF_OTHER_WAY {

    label 'process_high'
    publishDir "${params.outdir}/diff_comparison_${name[1]}_and_${name[0]}", mode: 'copy'
    container '/storage/data/MAP/hpcapps/opt/core/pipelines/ingm-base.0.5.2.simg'

    when:
    !params.skip_homer_diff
   
    input:
    tuple val(id), val(name), path(regions)

    output:
    tuple val(name), path("*.html")
    tuple val(name), path("*Results.txt"), emit: diff_results_other
    path "homerResults/*"
    path "knownResults/*"

    script:
    """    
    set +eu
    source activate ${HOME}/singularity/envs/motifanalysis/

    # The [0] region is the first region of the .csv file used as input, while the [1] is the second one.
  
    ${HOME}/singularity/envs/motifanalysis/bin/findMotifsGenome.pl ${regions[1]} hg38 ./ -size given -bg ${regions[0]} -p ${task.cpus} -cpg -h 
     mv *Results.txt ${name[1]}_and_${name[0]}_knownResults.txt

    """
}

process PLOT_DIFF_ENRICHMENT {

    label 'process_medium'
    publishDir "${params.outdir}/plots", mode: 'copy'
    container '/storage/data/MAP/hpcapps/opt/core/pipelines/ingm-base.0.5.2.simg'
    
    input:
    tuple val(name), path(comp1)
    tuple val(name), path(comp2)
    
    output:
    file "*.pdf"
    file "*.tsv"

    when:
    !params.skip_homer_diff
    
    script:
    """
    set +eu
    source activate ${HOME}/singularity/envs/motifanalysis/
    
    Rscript ${HOME}/map/til-epigenetics/atac-seq/analysis/motif_analysis/homer/plot_motifs.R ${comp1} ${comp2}
       
    """

}


workflow {

HOMER_ENRICHMENT(data)

PLOT_ENRICHMENT(
	HOMER_ENRICHMENT.out.html
	)

HOMER_FIND_INSTANCE(data)

data.groupTuple(by: 0)
    .set {diffs}

HOMER_DIFF_ONE_WAY(diffs)

HOMER_DIFF_OTHER_WAY(diffs)

PLOT_DIFF_ENRICHMENT(
	HOMER_DIFF_ONE_WAY.out.diff_results_one,
	HOMER_DIFF_OTHER_WAY.out.diff_results_other
	)

PLOT_DIFF_ENRICHMENT.out.view()
}