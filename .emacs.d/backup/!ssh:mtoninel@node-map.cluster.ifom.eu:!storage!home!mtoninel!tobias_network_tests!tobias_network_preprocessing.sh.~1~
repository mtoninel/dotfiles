#! usr/bin/bash

# Initialize variables
TFBS_DIR_TO_CLEAN_AND_FILT=""
TF_LIST_FILE=""
CONDITION=""
OUTPUT_DIR=""

usage() { echo "Usage: $0 [-d TFBS_DIR_TO_CLEAN_AND_FILT] [-n TF_LIST_FILE] [-c CONDITION] [-o OUTPUT_DIR] 

This snippet cleans up Ensembl gene ids in bed files output by tobias by removing the version of the gene (Ex. ENSG00..34.1 is converted to ENSG00..34). 
This functionality is required for the generation of the network, specifically for the matching between the ids of the factors in the motif2gene_mapping.txt file and the targets in each bed file of every trascription factor.
The snippet should be run from within the directory where the bed files are.

To move the bed files from the TFBS dir to a new dir use: 
 find TFBS/ -name "*_Texh_K_bound.bed" (or whatever condition) -exec cp {} Name/of/new/dir \;

" 1>&2 # Redirect to stderr
}

# Check command line args
while getopts {:d:n:c:o} options; do
    case "${options}" in
	d) TFBS_DIR_TO_CLEAN_AND_FILT=${OPTARG}
	   if [[ ! -d "${TFBS_DIR_TO_CLEAN_AND_FILT}" ]]
	   then
	       echo "${TFBS_DIR_TO_CLEAN_AND_FILT} does not exist!"
	       exit 1
	   fi
	   ;;
	n) TF_LIST_FILE=${OPTARG}
	   if [[! -er "${TF_LIST_FILE}"]]
	   then
	       echo "${TF_LIST_FILE} not provided"
	

cd $dir_to_filt
mkdir cleansed_beds

for file in *.bed 
do 
awk 'BEGIN{FS=OFS="\t"} split($23,a,".") {$23=a[1];print}' ${file} > cleansed_beds/${file}
done

# Filter TFs based on names
dir_to_filt="/storage/workingarea/MAP/til-epigenetics/bulk/atac-seq/analysis/TOBIAS_footprint/CD8_conditions_meme_HS_gencode_v38/Texh_K_bound/cleansed_beds"
names_file="/storage/workingarea/MAP/til-epigenetics/bulk/atac-seq/analysis/TOBIAS_footprint/CD8_conditions_meme_HS_gencode_v38/notebook_res/tf_list_exh_k.txt"
condition="_Texh_K_bound"
newdir_name="${dir_to_filt}/Texh_K_bound_cluster_6" 

cd ${dir_to_filt}
mkdir ${newdir_name}
while read tf; do 
find ${dir_to_filt}/ -name "$tf${condition}.bed" -exec cp {} ${newdir_name} \;
done <${names_file}

